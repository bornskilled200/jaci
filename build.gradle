buildscript {
    ext {
        lombokVersion = '1.16.6'
        gdxVersion = '1.7.0'

        junitVersion = '4.11'
        mockitoVersion = '1.9.5'

        nexusStagingPluginVersion = '0.5.3'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:$nexusStagingPluginVersion"
    }
}

apply plugin: 'io.codearte.nexus-staging'
nexusStaging {
    packageGroup = "com.github.ykrasik"
}

subprojects {
    apply plugin: "java"
    apply from: 'https://raw.githubusercontent.com/ykrasik/gradle-scripts/master/publish.gradle'
    apply from: 'https://raw.githubusercontent.com/ykrasik/gradle-scripts/master/provided.gradle'

    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile "junit:junit:$junitVersion"
        testCompile "org.mockito:mockito-all:$mockitoVersion"
    }
}

project("jaci-utils") {
    description "Jaci utils"

    dependencies {
        provided "com.badlogicgames.gdx:gdx:$gdxVersion"
    }
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

project("jaci-core") {
    description "Jaci API and Core implementation"

    dependencies {
        compile project(":jaci-utils")
        provided "com.badlogicgames.gdx:gdx:$gdxVersion"
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

project("jaci-cli-core") {
    description "Jaci command-line-interface core implementation"

    dependencies {
        compile project(":jaci-core")
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

project("jaci-javafx-cli") {
    description "Jaci JavaFX command-line-interface implementation"

    dependencies {
        compile project(":jaci-cli-core")
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

project("jaci-libgdx-cli") {
    description "Jaci LibGdx command-line-interface implementation"

    dependencies {
        compile project(":jaci-cli-core")

        provided "com.badlogicgames.gdx:gdx:$gdxVersion"
        provided "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        provided "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}
