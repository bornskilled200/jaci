// Generated by delombok at Fri Jan 01 22:07:35 EST 2016
/******************************************************************************
 * Copyright (C) 2015 Yevgeny Krasik                                          *
 *                                                                            *
 * Licensed under the Apache License, Version 2.0 (the "License");            *
 * you may not use this file except in compliance with the License.           *
 * You may obtain a copy of the License at                                    *
 *                                                                            *
 * http://www.apache.org/licenses/LICENSE-2.0                                 *
 *                                                                            *
 * Unless required by applicable law or agreed to in writing, software        *
 * distributed under the License is distributed on an "AS IS" BASIS,          *
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   *
 * See the License for the specific language governing permissions and        *
 * limitations under the License.                                             *
 ******************************************************************************/
package com.github.ykrasik.jaci.cli.assist;

import com.github.ykrasik.jaci.cli.command.CliCommand;

// TODO: JavaDoc
// FIXME: This class may be redundant... Either actually attach it to ParseExceptions or remove it.

/**
 * @author Yevgeny Krasik
 */
public class CommandInfo {

    private final CliCommand command;

    private final BoundParams boundParams;

    //@java.beans.ConstructorProperties({"command", "boundParams"})
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public CommandInfo( final CliCommand command,  final BoundParams boundParams) {
        if (command == null) {
            throw new java.lang.NullPointerException("command");
        }
        if (boundParams == null) {
            throw new java.lang.NullPointerException("boundParams");
        }
        this.command = command;
        this.boundParams = boundParams;
    }


    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public CliCommand getCommand() {
        return this.command;
    }


    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public BoundParams getBoundParams() {
        return this.boundParams;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof CommandInfo)) return false;
        final CommandInfo other = (CommandInfo)o;
        if (!other.canEqual((java.lang.Object)this)) return false;
        final java.lang.Object this$command = this.getCommand();
        final java.lang.Object other$command = other.getCommand();
        if (this$command == null ? other$command != null : !this$command.equals(other$command)) return false;
        final java.lang.Object this$boundParams = this.getBoundParams();
        final java.lang.Object other$boundParams = other.getBoundParams();
        if (this$boundParams == null ? other$boundParams != null : !this$boundParams.equals(other$boundParams)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof CommandInfo;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $command = this.getCommand();
        result = result * PRIME + ($command == null ? 43 : $command.hashCode());
        final java.lang.Object $boundParams = this.getBoundParams();
        result = result * PRIME + ($boundParams == null ? 43 : $boundParams.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public java.lang.String toString() {
        return "CommandInfo(command=" + this.getCommand() + ", boundParams=" + this.getBoundParams() + ")";
    }
}